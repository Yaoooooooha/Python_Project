import openpyxl
import datetime as dt
import os
from time import process_time
import tkinter.messagebox as msg
import string


def open_excel(name):
    return openpyxl.load_workbook(name)


def save_excel(name, file_name):
    file_name.save(name)


# 抓取課程資訊
def get_class_info(file_name):
    first = file_name.find('-')
    second = file_name.find('-', first + 1)
    # 辨認csv為普通班或專班
    if 'ZZZ' in file_name:
        end = file_name.find('-', second + 1)
        class_info = file_name[first + 1:end]
    else:
        third = file_name.find('-', second + 1)
        end = file_name.find('-', third + 1)
        class_info = file_name[first + 1:second - 1] + file_name[second:end]
    return class_info


# 統整紀錄
def integrate_excel(a, b, final_sheet, sheet):
    for final_sheet_index, final_sheet_ID in enumerate(list(final_sheet.columns)[1]):
        if final_sheet['A%d' % (final_sheet_index + 1)].value == '合計':
            break
        for sheet_index, sheet_ID in enumerate(list(sheet.columns)[1]):
            if final_sheet_ID.value == sheet_ID.value and sheet[a + '%d' % (sheet_index + 1)].value is not None:
                if sheet_index + 1 < 3:
                    continue
                if sheet['A%d' % (sheet_index + 1)].value == '合計':
                    break
                else:
                    final_sheet[a + '%d' % (final_sheet_index + 1)] = sheet[a + '%d' % (sheet_index + 1)].value
                    final_sheet[b + '%d' % (final_sheet_index + 1)] = sheet[b + '%d' % (sheet_index + 1)].value


# 搞定欄位標記
def is_record_col(record_index, column_index_dic):
    first_index = int(record_index / 26) - 1
    second_index = record_index % 26
    record_col = column_index_dic[first_index] + column_index_dic[second_index]
    return(record_col)


# 執行
def process():
    # 記錄程式執行時間
    start = process_time()

    # print(os.path.dirname(os.path.abspath(__file__)))

    # 創建課程資料夾
    os.chdir('/Users/yaoha0807/Desktop')
    File_Dir_Path = './Webex出席紀錄彙整'
    if not os.path.isdir(File_Dir_Path):
        os.mkdir(File_Dir_Path)
    os.chdir(File_Dir_Path)
    # 找到資料夾 把檔案全部掃一遍
    Class_File_Dir_Path = './課程資料'
    if not os.path.isdir(Class_File_Dir_Path):
        os.mkdir(Class_File_Dir_Path)
        msg.showinfo(title='資料夾已建立!', message='課程資料夾已建立於桌面，\n請在資料夾中新增課程檔案')
        os._exit(0)

    all_file_list = os.listdir(Class_File_Dir_Path)
    all_file_list_copy = os.listdir(Class_File_Dir_Path)
    # 創建彙整結果資料夾
    now_time = dt.datetime.now().strftime('%Y%m%d-%H%M%S')
    Result_Dir_Path = './' + '出席紀錄統整總表-' + now_time
    os.mkdir(Result_Dir_Path)

    xlsx_list = []
    xlsx_list_copy = []
    for file in all_file_list:
        if '.xlsx' in file:
            xlsx_list.append(file)
            xlsx_list_copy.append(file)

    # 配對相同班級之點名表
    attendance_file = []
    for file in xlsx_list:
        if file not in xlsx_list_copy:
            continue
        compare_list = []
        first_class_info = get_class_info(file)
        # 找出相同班級的點名表
        for compare_file in xlsx_list:
            second_class_info = get_class_info(compare_file)
            if first_class_info == second_class_info:
                compare_list.append(compare_file)
                xlsx_list_copy.remove(compare_file)
        # 紀錄配對好的點名表
        attendance_file.append(compare_list)

    # 創建欄位對應字典
    alphabet = string.ascii_uppercase
    column_index_dic = dict()
    for index, letter in enumerate(alphabet):
        column_index_dic[index] = letter

    # 統整出席紀錄總表
    for file_list in attendance_file:
        num_list = []
        sheet_list = []
        for file in file_list:
            # 紀錄面授次數
            num = int(file[-7])
            num_list.append(num)
            # 分別打開每個檔案
            tmp_file = open_excel('./課程資料/' + file)
            sheet_list.append(tmp_file)
        # 找出最後一次面授的出席紀錄檔案
        max_num = max(num_list)
        max_index = num_list.index(max_num)
        final_file_name = file_list[max_index]
        final_file = sheet_list[max_index]
        final_sheet = sheet_list[max_index]['統計']
        # 分別將出席紀錄整理至最後一次面授的出席紀錄檔案中
        for index, sheet in enumerate(sheet_list):
            sheet = sheet['統計']
            # 略過自己
            if sheet == final_sheet:
                continue
            # 依照第n次課程對應紀錄獲取欄位
            tmp_col = list(sheet.rows)[1]
            col_head = []
            num = num_list[index]
            for col in tmp_col:
                col_head.append(col.value)
            in_time_index = 0
            for i in range(int(num)):
                in_time_index = col_head.index('進入', in_time_index + 1)
                if i == int(num) - 1:
                    out_time_index = in_time_index + 1
            # 處理超過Z之欄位
            if in_time_index >= 26:
                in_time_col = is_record_col(in_time_index, column_index_dic)
            else:
                in_time_col = column_index_dic[in_time_index]
                out_time_col = column_index_dic[out_time_index]
            if out_time_index >= 26:
                out_time_col = is_record_col(out_time_index, column_index_dic)
            integrate_excel(in_time_col, out_time_col, final_sheet, sheet)
        # 存檔
        index = final_file_name.find("(")
        new_file_name = final_file_name[:index] + '(統整)' + final_file_name[index + 4:]
        save_excel(Result_Dir_Path + '/' + new_file_name, final_file)

    msg.showinfo(title='統整完成!', message='已完成統整 ' + str(len(attendance_file)) + ' 份點名檔')